name: Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.20

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build

      - name: Run tests
        run: bun run test

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: bun run changesets:publish
          version: bun run changesets:version
          commit: "ci: release packages"
          title: "ci: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Releases
        if: steps.changesets.outputs.published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | @base64' | while read package; do
            decoded=$(echo $package | base64 --decode)
            name=$(echo $decoded | jq -r '.name')
            version=$(echo $decoded | jq -r '.version')
            
            # Create release for each published package
            gh release create "${name}@${version}" \
              --title "${name} v${version}" \
              --notes "Release of ${name} version ${version}"
          done
